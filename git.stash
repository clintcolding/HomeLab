diff --git a/ansible/services/clintcolding_web.yml b/ansible/services/clintcolding_web.yml
index afa8524..2c7ad21 100644
--- a/ansible/services/clintcolding_web.yml
+++ b/ansible/services/clintcolding_web.yml
@@ -16,19 +16,21 @@
         image: clintcolding/clintcolding_web
         networks:
           - traefik
-        replicas: 2
+        replicas: 1
         labels:
           #---- 80 Entry ----#
           traefik.http.routers.clintcolding_web.rule: "Host(`clintcolding.com`)"
           traefik.http.routers.clintcolding_web.entrypoints: "web"
-          traefik.http.routers.clintcolding_web.middlewares: "redirect"
+          traefik.http.routers.clintcolding_web.middlewares: "ccweb_redirect"
           #---- 443 Entry ----#
           traefik.http.routers.clintcolding_websecure.rule: "Host(`clintcolding.com`)"
           traefik.http.routers.clintcolding_websecure.entrypoints: "websecure"
-          #---- Create the middleware "redirect" used on 80 entry ----#
-          traefik.http.middlewares.redirect.redirectscheme.scheme: "https"
+          #---- Create the middleware "ccweb_redirect" used on 80 entry ----#
+          traefik.http.middlewares.ccweb_redirect.redirectscheme.scheme: "https"
           #---- Expose container port 80 ----#
           traefik.http.services.clintcolding_web-service.loadbalancer.server.port: "80"
           #---- ACME config for websecure router ----#
           traefik.http.routers.clintcolding_websecure.tls.certresolver: "httpchallenge"
-          
+        placement:
+          constraints:
+            - node.role == manager
diff --git a/ansible/services/monitoring.yml b/ansible/services/monitoring.yml
index 98f6f3c..57eccc0 100644
--- a/ansible/services/monitoring.yml
+++ b/ansible/services/monitoring.yml
@@ -28,14 +28,23 @@
           - traefik
         placement:
           constraints:
-            - node.hostname == rpi02
+            - node.hostname == rpi01
         env:
           GF_INSTALL_PLUGINS: grafana-piechart-panel
         labels:
-          traefik.http.routers.grafana.rule: "Host(`grafana.thecoldings.com`)"
+          #---- 80 Entry ----#
+          traefik.http.routers.grafana_web.rule: "Host(`grafana.clintcolding.com`)"
+          traefik.http.routers.grafana_web.entrypoints: "web"
+          traefik.http.routers.grafana_web.middlewares: "grafana_redirect"
+          #---- Create the middleware "grafana_redirect" used on 80 entry ----#
+          traefik.http.middlewares.grafana_redirect.redirectscheme.scheme: "https"
+          #---- 443 Entry ----#
+          traefik.http.routers.grafana_websecure.rule: "Host(`grafana.clintcolding.com`)"
+          traefik.http.routers.grafana_websecure.entrypoints: "websecure"
+          #---- Expose port 3000 ----#
           traefik.http.services.grafana-service.loadbalancer.server.port: "3000"
-          traefik.http.routers.grafana.entrypoints: "websecure"
-          traefik.http.routers.grafana.tls.certresolver: "httpchallenge"
+          #---- ACME config for websecure router ----#
+          traefik.http.routers.grafana_websecure.tls.certresolver: "httpchallenge"
         mounts:
           - source: grafana-data
             target: /var/lib/grafana/
@@ -52,10 +61,19 @@
           constraints:
             - node.hostname == rpi01
         labels:
-          traefik.http.routers.prom.rule: "Host(`prom.thecoldings.com`)"
+          #---- 80 Entry ----#
+          traefik.http.routers.prom_web.rule: "Host(`prom.clintcolding.com`)"
+          traefik.http.routers.prom_web.entrypoints: "web"
+          traefik.http.routers.prom_web.middlewares: "prom_redirect"
+          #---- Create the middleware "prom_redirect" used on 80 entry ----#
+          traefik.http.middlewares.prom_redirect.redirectscheme.scheme: "https"
+          #---- 443 Entry ----#
+          traefik.http.routers.prom_websecure.rule: "Host(`prom.clintcolding.com`)"
+          traefik.http.routers.prom_websecure.entrypoints: "websecure"
+          #---- Expose port 9090 ----#
           traefik.http.services.prom-service.loadbalancer.server.port: "9090"
-          traefik.http.routers.prom.entrypoints: "websecure"
-          traefik.http.routers.prom.tls.certresolver: "httpchallenge"
+          #---- ACME config for websecure router ----#
+          traefik.http.routers.prom_websecure.tls.certresolver: "httpchallenge"
         mounts:
           - source: /etc/prometheus.yml
             target: /etc/prometheus/prometheus.yml
diff --git a/ansible/services/pihole_exporter.yml b/ansible/services/pihole_exporter.yml
index 36d80ca..2aaf34a 100644
--- a/ansible/services/pihole_exporter.yml
+++ b/ansible/services/pihole_exporter.yml
@@ -24,6 +24,9 @@
           PORT: "9180"
         labels:
           #---- 80 Entry ----#
-          traefik.http.routers.pihole-exporter.rule: "Host(`pihole-exporter.thecoldings.com`)"
+          traefik.http.routers.pihole-exporter.rule: "Host(`pihole-exporter.clintcolding.com`)"
           traefik.http.routers.pihole-exporter.entrypoints: "web"
           traefik.http.services.pihole-exporter-service.loadbalancer.server.port: "9180"
+        placement:
+          constraints:
+            - node.role == manager
diff --git a/ansible/services/traefikv2.yml b/ansible/services/traefikv2.yml
deleted file mode 100644
index 51f6fc0..0000000
--- a/ansible/services/traefikv2.yml
+++ /dev/null
@@ -1,72 +0,0 @@
-- name: deploy traefikv2 swarm service
-  hosts: rpi01
-  remote_user: pi
-  become: yes
-  
-  vars_files:
-    - ~/git/HomeLab/vault.yml
-
-  vars:
-    ansible_ssh_pass: "{{ remote_pass }}"
-
-  tasks:
-    - name: create traefik network
-      docker_network:
-        name: traefik
-        driver: overlay
-        attachable: yes
-
-    - name: create certificate volume
-      docker_volume:
-        name: traefik-certs
-
-    - name: create traefik swarm service
-      docker_swarm_service:
-        name: traefikv2
-        image: traefik:v2.0
-        networks:
-          - traefik
-        replicas: 1
-        args: 
-          # Enable API and Dashboard UI
-          - "--api"
-          - "--api.insecure=true"
-          # Enable the Docker provider
-          - "--providers.docker"
-          - "--providers.docker.swarmmode=true"
-          - "--providers.docker.watch"
-          # Configure ACME Let's Encrypt
-          - "--entryPoints.web.address=:80"
-          - "--entryPoints.websecure.address=:443"
-          - "--certificatesResolvers.httpchallenge.acme.httpChallenge=true"
-          - "--certificatesResolvers.httpchallenge.acme.httpChallenge.entryPoint=web"
-          - "--certificatesResolvers.httpchallenge.acme.email=clintcolding@gmail.com"
-          - "--certificatesResolvers.httpchallenge.acme.storage=/letsencrypt/acme.json"
-          # Enable Prometheus metrics and logging
-          - "--metrics.prometheus"
-          - "--log"
-          - "--accessLog"
-        publish:
-          - published_port: 80
-            target_port: 80
-          - published_port: 443
-            target_port: 443
-          - published_port: 8081
-            target_port: 8080
-        mounts:
-          - source: /var/run/docker.sock
-            target: /var/run/docker.sock
-            type: bind
-          - source: traefik-certs
-            target: /letsencrypt
-            type: volume
-        placement:
-          constraints:
-            - node.role == manager
-        # labels:
-          # traefik.http.routers.api.rule: "PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
-          # traefik.http.routers.api.service: "api@internal"
-          # traefik.http.routers.api.middlewares: "auth"
-          # traefik.http.middlewares.auth.basicauth.users: "test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/"
-        #   traefik.http.routers.traefik.rule: "Host(`traefik.thecoldings.com`)"
-        #   traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
\ No newline at end of file
diff --git a/files/prometheus.yml b/files/prometheus.yml
index 4426046..3844823 100644
--- a/files/prometheus.yml
+++ b/files/prometheus.yml
@@ -39,4 +39,4 @@ scrape_configs:
   scheme: http
   static_configs:
   - targets:
-    - pihole-exporter.thecoldings.com
\ No newline at end of file
+    - pihole-exporter.clintcolding.com
\ No newline at end of file
diff --git a/inventory/hosts.yml b/inventory/hosts.yml
index 7b6b2b2..6823d3d 100644
--- a/inventory/hosts.yml
+++ b/inventory/hosts.yml
@@ -3,4 +3,4 @@ rpiman ansible_host=192.168.1.100
 
 [docker]
 rpi01 ansible_host=192.168.1.101 role=leader
-rpi02 ansible_host=192.168.1.102
\ No newline at end of file
+#rpi02 ansible_host=192.168.1.102
\ No newline at end of file
